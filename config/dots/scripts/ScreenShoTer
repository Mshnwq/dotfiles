#!/usr/bin/env bash
#  ╔═╗╔═╗╦═╗╔═╗╔═╗╔╗╔╔═╗╦ ╦╔═╗╔╦╗╔═╗╦═╗
#  ╚═╗║  ╠╦╝║╣ ║╣ ║║║╚═╗╠═╣║ ║ ║ ║╣ ╠╦╝
#  ╚═╝╚═╝╩╚═╚═╝╚═╝╝╚╝╚═╝╩ ╩╚═╝ ╩ ╚═╝╩╚═
#
#   z0mbi3
#   https://github.com/gh0stzk/dotfiles
#   Script to take screenshots using maim.
#   20.12.2023 16:10:25


# Screenshot general options
timestamp=$(date +%Y-%m-%d_%H-%M-%S)
savedir="$HOME/Pictures/ScreenShots"
filename="$savedir/Shot-${timestamp}.png"
audio="$HOME/.local/share/stereo/screen-capture.oga"

# Create dir if not exists
[ -d "$savedir" ] || mkdir -p "$savedir"

# Rofi options
s_full=""
s_select=""
s_swappy=""
s_in3="󰔝"
s_in10="󰔜"

rofi_cmd() {
  rofi -dmenu \
    -p Screenshot \
    -mesg "Directory :: $savedir" \
    -markup-rows \
    -theme "$HOME"/.config/rofi/Screenshot.rasi
}
    #-p "Screenshot Directory :: $savedir" \

run_rofi() {
  echo -e "$s_full\n$s_select\n$s_swappy\n$s_in3\n$s_in10" | rofi_cmd
}

show_notification() {
  if [[ -e "$filename" ]]; then
    dunstify --replace=699 -i "$filename" "Screenshot" "Screenshot saved and copied to clipboard"
  else
    dunstify --replace=699 -i custom-trash-bin "Screenshot" "Screenshot Canceled"
  fi
}

take_screenshot() {
  if [[ "$@" != "--sel" ]]; then
    grim "$filename"  && paplay "$audio" &>/dev/null | wl-copy < "$filename"
  else
    grim -g "$(slurp)" "$filename" && paplay "$audio" &>/dev/null | wl-copy < "$filename"
  fi
  show_notification
}

countdown() {
  for sec in $(seq "$1" -1 1); do
    dunstify -t 1000 -i ~/.config/bspwm/src/assets/screenshot.png "Taking shot in : $sec"
    sleep 1
  done
}

run_cmd() {
  case $1 in
    --now)
      sleep 0.5 && take_screenshot
      ;;
    --sel)
      take_screenshot --sel
      ;;
    --swappy)
	grim -g "$(slurp)" "$filename" && paplay "$audio" &>/dev/null
	swappy -f "$filename" -o "$filename"
	wl-copy < "$filename"
      ;;
    --in3)
      countdown 3 && take_screenshot
      ;;
    --in10)
      countdown 10 && take_screenshot
      ;;
  esac
}

if [[ "$1" == "--override" ]]; then
  run_cmd --$2
  exit 0
fi

select_option="$(run_rofi)"
case ${select_option} in
  "$s_full")
    run_cmd --now
    ;;
  "$s_select")
    run_cmd --sel
    ;;
  "$s_swappy")
    run_cmd --swappy
    ;;
  "$s_in3")
    run_cmd --in3
    ;;
  "$s_in10")
    run_cmd --in10
    ;;
esac
