{
  pkgs,
  ...
}:
let
  cargoLock = pkgs.writeText "Cargo.lock" ''
    # This file is automatically @generated by Cargo.
    # It is not intended for manual editing.
    version = 4

    [[package]]
    name = "niflveil"
    version = "0.1.0"
  '';

  # https://github.com/NixOS/nixpkgs/blob/4fc53b59aecbc25c0e173163d60155f8fca14bfd/doc/languages-frameworks/rust.section.md#compiling-rust-applications-with-cargo
  niflveil = pkgs.rustPlatform.buildRustPackage {
    pname = "niflveil";
    version = "git-40d57fc";
    src = pkgs.fetchFromGitHub {
      owner = "mauitron";
      repo = "niflveil";
      rev = "40d57fc";
      hash = "sha256-l5byrdtLjWgbiBLRT/TkUJiYPupHdzur23Et/wEAIBA=";
    };

    nativeBuildInputs = [ pkgs.gcc ];
    sourceRoot = "source/niflveil";

    # https://github.com/NixOS/nixpkgs/blob/4fc53b59aecbc25c0e173163d60155f8fca14bfd/doc/languages-frameworks/rust.section.md#building-a-crate-with-an-absent-or-out-of-date-cargolock-file
    # https://discourse.nixos.org/t/build-a-pckg-of-a-rust-app-without-cargo-lock/46957/3
    cargoLock = {
      lockFile = cargoLock;
    };

    postPatch = ''
      sed -i '341c\        println!("{{\\"text\\":\\" \\",\\"class\\":\\"empty\\",\\"tooltip\\":\\"No minimized windows\\"}}");' src/main.rs
      ln -s ${cargoLock} Cargo.lock
    '';
  };
in
{
  home.packages =
    with pkgs;
    [
      grim
      swappy
      libinput-gestures
    ]
    ++ ([
      niflveil
    ]);
}
