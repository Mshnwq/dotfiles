#  ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
#  ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#     ██║   ██╔████╔██║██║   ██║ ╚███╔╝  
#     ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗   
#     ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#     ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝

# --------------------#
#     Keybindings     #
# --------------------#

# Set prefix to Ctrl + Space
unbind C-Space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix # send prefix

# reload config
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!" # quick reload

# window spliting
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"

# pane swapping ctrl + Space && shift + arrows
bind -r S-Down resize-pane -D 15
bind -r S-Up resize-pane -U 15
bind -r S-Left resize-pane -L 15
bind -r S-Right resize-pane -R 15

bind j choose-window 'join-pane -h -s "%%"'
bind J choose-window 'join-pane -s "%%"'

# keep current path on new window
bind c new-window -c "#{pane_current_path}"

# window swapping
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1
bind Space last-window

# my special binds
bind-key k clock-mode
# setw -g clock-mode-colour colour5
unbind t
bind-key t choose-tree -Zw
unbind q
bind-key q kill-window
unbind w
bind-key w kill-pane
bind-key a display-panes
bind-key b command-prompt -I "#S" "rename-session -- '%%'"

unbind n
unbind ,
unbind .
bind-key n command-prompt -I "#W" "rename-window -- '%%'"
bind-key , previous-window
bind-key . next-window

# kill
bind-key W command-prompt -I "kill-session" 
bind-key Q command-prompt -I "kill-server" 

unbind C
bind-key C command-prompt -I "new-session" 
# session swap
bind-key C-Space switch-client -l

#bind-key o split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# --------------------#
#       Options       #
# --------------------#

set-option -g history-limit 5000
set -g mouse on

# have windows and panes to start with 1.
set -g base-index 1
setw -g pane-base-index 1

# Set default status bar postion
set -g status-position top
#set -g status-position bottom

# Define a key binding to toggle the status bar position
bind-key "^" if-shell "test #{status-position} = bottom" "set-option -g status-position top" "set-option -g status-position bottom"
#bind-key "6" if-shell "test #{status-position} = bottom" "set-option -g status-position top" "set-option -g status-position bottom"


# Map ! to switch to window 1
#bind-key '!' select-window -t 1
# Map number 1 to break-pane (originally !)
#bind-key 1 break-pane
bind-key ! break-pane

# TODO: add a way to select window 1
#bind-key '@' select-window -t 2
#bind-key '#' select-window -t 3
#bind-key '$' select-window -t 4
#bind-key '%' select-window -t 5
#bind-key '^' select-window -t 6
#bind-key '&' select-window -t 7
#bind-key '*' select-window -t 8
#bind-key '(' select-window -t 9
#bind-key ')' select-window -t 0

bind-key '1' select-window -t 1
bind-key '2' select-window -t 2
bind-key '3' select-window -t 3
bind-key '4' select-window -t 4
bind-key '5' select-window -t 5
bind-key '6' select-window -t 6
bind-key '7' select-window -t 7
bind-key '8' select-window -t 8
bind-key '9' select-window -t 9
bind-key ')' select-window -t 0

# for yazi display images
#set -g allow-passthrough on
#set -ga update-environment TERM
#set -ga update-environment TERM_PROGRAM

#  ┌─┐┬  ┬ ┬┌─┐┬┌┐┌┌─┐
#  ├─┘│  │ ││ ┬││││└─┐
#  ┴  ┴─┘└─┘└─┘┴┘└┘└─┘
set -g @plugin 'tmux-plugins/tpm'

# NOTE: -- dont forget to patch --
run '~/.config/tmux/plugins/tmux-floax/floax.tmux'
# M- means "hold Meta/Alt"
set -g @floax-bind '-n M-p'
set -g @floax-bind-menu 'P'
set -g @floax-width '50%'
set -g @floax-height '50%'
# set -g @floax-x 'R'
set -g @floax-x 'P'
set -g @floax-y 'P'
# Options: black, red, green, yellow, blue, magenta, cyan, white
set -g @floax-border-color 'blue'
set -g @floax-text-color 'white'
set -g @floax-change-path 'false'
set -g @floax-session-name 'floax'
set -g @floax-title '─'
# --------------------------------

set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_LAUNCH_KEY="z"
#TMUX_FZF_PREVIEW=1
#TMUX_FZF_PANE_FORMAT="[#{window_name}] #{pane_current_command}  [#{pane_width}x#{pane_height}] [history #{history_size}/#{history_limit}, #{history_bytes} bytes] #{?pane_active,[active],[inactive]}"

#set -g @plugin 'jaclu/tmux-mouse-swipe'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_with_mouse on

#  ┌┬┐┬ ┬┌─┐┌┬┐┌─┐
#   │ ├─┤├┤ │││├┤ 
#   ┴ ┴ ┴└─┘┴ ┴└─┘ 
#set -g @plugin 'dracula/tmux'
# NOTE: use my patch instead!
run '~/.config/tmux/plugins/tmux-dracula/dracula.tmux'
#set -g default-terminal "xterm-256color"
#set -as terminal-features ",tmux-256color:RGB"

set -g @dracula-show-powerline true
set -g @dracula-border-contrast true  # pane edge highlight
set -g @dracula-show-flags true
set -g @dracula-show-left-icon session
set -g @dracula-clients-minimum 1

# "\ue0be"  
# "\ue0ba"  
# "\ue0bc"  
# "\ue0b8"  
set -g @dracula-transparent-powerline-bg true
set -g @dracula-show-left-sep \ue0bc
set -g @dracula-show-right-sep \ue0be
set -g @dracula-inverse-divider \ue0ba

# -- start replace from rice 
set -g @dracula-colors "
dark_gray='#0b1119'
green='#4D6D74'
yellow='#435968'
dark_purple='#5a636e'
light_purple='#c2c3c5'
mpc_fg='#0b1119'
mpc_bg='#4D6D74'
white='#c2c3c5'
fg='#c2c3c5'
bg='#0b1119'
"
# -- end replace from rice 

set -g @dracula-invert-select-window-fg true	#-invert-select-window

# dracula customizations
set -g @dracula-plugins "kitty"
set -g @dracula-kitty-colors "mpc_bg mpc_fg"

# https://haseebmajid.dev/posts/2023-07-10-setting-up-tmux-with-nix-home-manager/#continuum--resurrect-issues
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-dir "~/.local/state/tmux/resurrect" 

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'
run '~/.config/tmux/plugins/tpm/tpm'
